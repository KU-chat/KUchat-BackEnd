<!DOCTYPE HTML>
<html>
<head>
    <title>KUchat localhost</title>
    <meta charset="UTF-8">
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css">
</head>
<body>
<!--layout/header-->
<h1> KUchat localhost </h1>

<!-- 조건문 (처음 #이 userName 값이 존재하는 경우, ^는 userName이 없는 경우) -->
{{#token}}       <!-- List를 순회,  "/logout" : 스프링 시큐리티에서 기본적으로 제공하는 로그아웃 url (컨트롤러에서 구현할 필요X), securityConfig에서 url 변경 가능-->
Logged in as: <span id="user">{{token}}</span>
<a href="/logout" class="btn btn-info active" role="button">Logout</a>
{{/token}}

{{^token}}
    <a href="/oauth2/authorization/google" class="btn btn-sm btn-success active" role="button">Google Login</a>
{{/token}}


<!--layout/footer-->
<script src="https://code.jquery.com/jquery-3.3.1.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script>


<script>
    // 로그인 시 서버에서 받은 JWT 토큰을 로컬 스토리지에 저장
    localStorage.setItem('token', token);

    // 로그아웃 시 로컬 스토리지에서 JWT 토큰 제거
    // localStorage.removeItem('accessToken');

    // 페이지 로드 시 저장된 JWT 토큰을 확인하여 로그인 여부 판별
    $(document).ready(function() {
        var accessToken = localStorage.getItem('token');

        if (accessToken) {
            // JWT 토큰을 서버로 전송하여 인증 확인 후, 사용자 정보를 받아올 수 있음
            $.ajax({
                url: '/api/user',
                method: 'GET',
                headers: {
                    'Authorization': 'Bearer ' + accessToken
                },
                success: function(response) {
                    console.log('사용자 정보:', response);
                    // 사용자 정보를 화면에 표시하거나 다른 작업 수행
                },
                error: function(xhr, status, error) {
                    console.error('사용자 정보를 가져오는 중 에러 발생:', error);
                }
            });
        } else {
            console.log('사용자는 로그인하지 않았습니다.');
        }
    });
</script>
</body>
</html>
